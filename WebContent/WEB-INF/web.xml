<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>HelloWorld</display-name>
  <!-- 세부 파일명 없이 접속했을 때 보여줄 기본 페이지 -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- Filter 등록 -->
  <filter>
  	<filter-name>EncodingFilter</filter-name>
  	<filter-class>com.bit.utils.EncodingFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>EncodingFilter</filter-name>
  	<!-- /* : 모든 url 요청 패턴 -->
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- Servlet을 등록 -->
  <servlet>
  	<!-- Servlet name은 해당 서블릿을 식별하기 위한 이름 -->
  	<servlet-name>MyServlet</servlet-name>	<!-- (3) -->
  	<!-- 실제 요청을 처리할 Servlet class -->
  	<servlet-class>HelloServlet</servlet-class>	<!-- (4) -->
  </servlet>
  
  <!-- Servlet Mapping: 요청을 처리할 수 있는 서블릿을 찾기 위한 정보 -->
  <servlet-mapping>
  	<servlet-name>MyServlet</servlet-name>	<!-- (2) -->
  	<url-pattern>/hs</url-pattern>	<!-- (1) -->
  </servlet-mapping>
  
  <!-- 사용자가 /hs 요청을 전달했을 때
  (1) 사용자의 요청을 처리한 매핑 정보를 찾는다
  (2) 해당 요청을 처리할 수 있는 서블릿의 이름을 찾는다
  (3) 같은 이름을 가진 서블릿 정보를 찾는다
  (4) 그 요청을 처리할 수 있는 실제 서블릿 클래스를 찾아서
  (5) 요청 정보를 객체화 햇서 처리할 수 있는 doGet, doPost 등 메서드에 전달 -->
</web-app>